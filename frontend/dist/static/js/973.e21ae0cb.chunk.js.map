{"version":3,"file":"static/js/973.e21ae0cb.chunk.js","mappings":"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","sources":["components/Button.tsx","components/Card.tsx","components/SelectDialog.tsx","components/Text.tsx","../node_modules/@mui/material/DialogContentText/dialogContentTextClasses.js","../node_modules/@mui/material/DialogContentText/DialogContentText.js","components/FormDialog.tsx","views/Setting/index.tsx"],"sourcesContent":["import { Component } from \"react\";\r\nimport { I18nTranslation } from \"../config/i18n\";\r\nimport { WithTranslation, withTranslation } from \"react-i18next\";\r\n\r\ninterface ButtonProps extends WithTranslation {\r\n    readonly label: I18nTranslation;\r\n    readonly className?: string;\r\n    readonly onClick?: () => void;\r\n}\r\n\r\nclass Button extends Component<ButtonProps> {\r\n    constructor(props: ButtonProps) {\r\n        super(props);\r\n        this.state = {\r\n            isBusy: false,\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const { t, className, label, onClick } = this.props;\r\n        return (\r\n            <button\r\n                className={`w-full text-white font-medium text-sm shadow-lg rounded-lg py-2 ${\r\n                    className ?? \"\"\r\n                }`}\r\n                onClick={onClick}\r\n            >\r\n                {t(label.id, label.format)}\r\n            </button>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTranslation()(Button);\r\n","import { Component, ReactNode } from \"react\";\r\nimport { WithTranslation, withTranslation } from \"react-i18next\";\r\nimport { I18nTranslation } from \"../config/i18n\";\r\n\r\ninterface CardProps extends WithTranslation {\r\n    readonly className?: string;\r\n    readonly label: I18nTranslation;\r\n    readonly sublabel?: I18nTranslation;\r\n    readonly children: ReactNode | ReactNode[];\r\n}\r\n\r\nclass Card extends Component<CardProps> {\r\n    render() {\r\n        const { t, className, label, sublabel, children } = this.props;\r\n        const childrenArr = Array.isArray(children) ? children : [children];\r\n\r\n        return (\r\n            <div className=\"w-full h-full text-gray-800\">\r\n                <div className=\"flex flex-col shadow-lg rounded-lg\">\r\n                    <div className=\"px-4 py-3 font-bold\">\r\n                        {sublabel && (\r\n                            <h6 className=\"text-gray-500 text-xs\">\r\n                                {t(sublabel.id, sublabel.format)}\r\n                            </h6>\r\n                        )}\r\n                        <h2 className=\"text-xl\">{t(label.id, label.format)}</h2>\r\n                    </div>\r\n\r\n                    <div\r\n                        className={`p-4 m-2 flex flex-col justify-center gap-4 ${\r\n                            className ?? \"\"\r\n                        }`}\r\n                    >\r\n                        {childrenArr.map((item, index) => (\r\n                            <div key={index}>{item}</div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTranslation()(Card);\r\n","import {\r\n    Dialog,\r\n    DialogTitle,\r\n    ListItem,\r\n    ListItemButton,\r\n    ListItemText,\r\n} from \"@mui/material\";\r\nimport { Component } from \"react\";\r\nimport { WithTranslation, withTranslation } from \"react-i18next\";\r\nimport { I18nTranslation } from \"../config/i18n\";\r\n\r\nexport interface SelectDialogProps {\r\n    readonly title: I18nTranslation;\r\n    readonly open: boolean;\r\n    readonly values: string[][];\r\n    readonly onClose?: (value: string) => void;\r\n    readonly onSelect?: (value: string) => void;\r\n}\r\n\r\nclass SelectDialog extends Component<SelectDialogProps & WithTranslation> {\r\n    render() {\r\n        const { t, title, open, values, onClose, onSelect } = this.props;\r\n        return (\r\n            <Dialog onClose={onClose} open={open}>\r\n                <DialogTitle>{t(title.id, title.format)}</DialogTitle>\r\n                {values.map((item, index) => (\r\n                    <ListItem key={index} disableGutters>\r\n                        <ListItemButton\r\n                            onClick={() => onSelect && onSelect(item[1])}\r\n                        >\r\n                            <ListItemText\r\n                                primary={item[0]}\r\n                                secondary={item[3] ? item[3] : item[1]}\r\n                            />\r\n                        </ListItemButton>\r\n                    </ListItem>\r\n                ))}\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTranslation()(SelectDialog);\r\n","import { Component } from \"react\";\r\n\r\nexport interface TextProps {\r\n    readonly className?: string;\r\n    readonly children: string;\r\n}\r\n\r\nexport default class Text extends Component<TextProps> {\r\n    render() {\r\n        const { className, children } = this.props;\r\n        return <div className={className}>{children}</div>;\r\n    }\r\n}\r\n","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getDialogContentTextUtilityClass(slot) {\n  return generateUtilityClass('MuiDialogContentText', slot);\n}\nconst dialogContentTextClasses = generateUtilityClasses('MuiDialogContentText', ['root']);\nexport default dialogContentTextClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Typography from '../Typography';\nimport { getDialogContentTextUtilityClass } from './dialogContentTextClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  const composedClasses = composeClasses(slots, getDialogContentTextUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\nconst DialogContentTextRoot = styled(Typography, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiDialogContentText',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({});\nconst DialogContentText = /*#__PURE__*/React.forwardRef(function DialogContentText(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDialogContentText'\n  });\n  const {\n      className\n    } = props,\n    ownerState = _objectWithoutPropertiesLoose(props, _excluded);\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(DialogContentTextRoot, _extends({\n    component: \"p\",\n    variant: \"body1\",\n    color: \"text.secondary\",\n    ref: ref,\n    ownerState: ownerState,\n    className: clsx(classes.root, className)\n  }, props, {\n    classes: classes\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogContentText.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default DialogContentText;","import {\r\n    Button,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogContentText,\r\n    DialogTitle,\r\n    TextField,\r\n} from \"@mui/material\";\r\nimport { Component, HTMLInputTypeAttribute, createRef } from \"react\";\r\nimport { I18nTranslation } from \"../config/i18n\";\r\nimport { WithTranslation, withTranslation } from \"react-i18next\";\r\n\r\nexport interface FormDialogProps {\r\n    readonly tag?: string;\r\n    readonly open: boolean;\r\n    readonly defaultValue?: string;\r\n    readonly title: I18nTranslation;\r\n    readonly content?: I18nTranslation;\r\n    readonly cancelText?: I18nTranslation;\r\n    readonly submitText?: I18nTranslation;\r\n    readonly placeholder?: I18nTranslation;\r\n    readonly inputType: HTMLInputTypeAttribute;\r\n    readonly onSubmit?: (value: string) => void;\r\n    readonly onClose?: () => void;\r\n}\r\n\r\ninterface FormDialogState {\r\n    readonly input: React.RefObject<HTMLInputElement>;\r\n}\r\n\r\nclass FormDialog extends Component<\r\n    FormDialogProps & WithTranslation,\r\n    FormDialogState\r\n> {\r\n    constructor(props: FormDialogProps & WithTranslation) {\r\n        super(props);\r\n        this.state = {\r\n            input: createRef(),\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            t,\r\n            open,\r\n            title,\r\n            content,\r\n            cancelText,\r\n            submitText,\r\n            placeholder,\r\n            defaultValue,\r\n            inputType,\r\n            onSubmit,\r\n            onClose,\r\n        } = this.props;\r\n        const { input } = this.state;\r\n\r\n        return (\r\n            <Dialog open={open}>\r\n                <DialogTitle>{t(title.id, title.format)}</DialogTitle>\r\n                <DialogContent>\r\n                    {content && (\r\n                        <DialogContentText>\r\n                            {t(content.id, content.format)}\r\n                        </DialogContentText>\r\n                    )}\r\n                    <TextField\r\n                        autoFocus\r\n                        fullWidth\r\n                        inputRef={input}\r\n                        className=\"mt-8\"\r\n                        type={inputType}\r\n                        defaultValue={defaultValue}\r\n                        label={t(placeholder?.id ?? \"\", placeholder?.format)}\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    {cancelText && (\r\n                        <Button onClick={onClose}>\r\n                            {t(cancelText.id, cancelText.format)}\r\n                        </Button>\r\n                    )}\r\n                    <Button\r\n                        onClick={() =>\r\n                            onSubmit && onSubmit(input.current?.value ?? \"\")\r\n                        }\r\n                    >\r\n                        {submitText\r\n                            ? t(submitText.id, submitText.format)\r\n                            : \"Submit\"}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTranslation()(FormDialog);\r\n","import { Component } from \"react\";\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\nimport Content from \"../../components/Content\";\r\nimport Footer from \"../../components/Footer\";\r\nimport Header from \"../../components/Header\";\r\nimport Navbar from \"../../components/Navbar\";\r\nimport Scroller from \"../../components/Scroller\";\r\nimport Sidebar from \"../../components/Sidebar\";\r\nimport View from \"../../components/View\";\r\nimport Container from \"../../components/Container\";\r\nimport Card from \"../../components/Card\";\r\nimport Text from \"../../components/Text\";\r\nimport Button from \"../../components/Button\";\r\nimport SelectDialog, { SelectDialogProps } from \"../../components/SelectDialog\";\r\nimport GLOBAL_CONFIG, { fallbackScale } from \"../../config/global\";\r\nimport mapStateToProps from \"../../helpers/utils/mapStateToProps\";\r\nimport { update as updateScale } from \"../../store/scale\";\r\nimport { update as updateRetention } from \"../../store/retention\";\r\nimport { update as updateDuration } from \"../../store/duration\";\r\nimport { connect } from \"react-redux\";\r\nimport { ReduxStoreProps } from \"../../config/store\";\r\nimport { WithTranslation, withTranslation } from \"react-i18next\";\r\nimport { I18nTranslation } from \"../../config/i18n\";\r\nimport FormDialog, { FormDialogProps } from \"../../components/FormDialog\";\r\n\r\ninterface SettingCard {\r\n    readonly label: I18nTranslation;\r\n    readonly button: I18nTranslation;\r\n    readonly content: I18nTranslation;\r\n    readonly className: string;\r\n    readonly onClick: () => void;\r\n}\r\n\r\ninterface SettingState {\r\n    readonly cards: SettingCard[];\r\n    readonly select: SelectDialogProps;\r\n    readonly input: FormDialogProps;\r\n}\r\n\r\nclass Setting extends Component<\r\n    ReduxStoreProps & WithTranslation,\r\n    SettingState\r\n> {\r\n    constructor(props: ReduxStoreProps & WithTranslation) {\r\n        super(props);\r\n        this.state = {\r\n            cards: [\r\n                {\r\n                    label: { id: \"views.setting.cards.waveform_retention\" },\r\n                    content: {\r\n                        id: \"views.setting.contents.waveform_retention\",\r\n                        format: {\r\n                            retention:\r\n                                this.props.retention.retention.toString(),\r\n                        },\r\n                    },\r\n                    button: { id: \"views.setting.buttons.waveform_retention\" },\r\n                    className: \"bg-teal-700 hover:bg-teal-800\",\r\n                    onClick: this.handleRetentionChange,\r\n                },\r\n                {\r\n                    label: { id: \"views.setting.cards.query_duration\" },\r\n                    content: {\r\n                        id: \"views.setting.contents.query_duration\",\r\n                        format: {\r\n                            duration: this.props.duration.duration.toString(),\r\n                        },\r\n                    },\r\n                    button: { id: \"views.setting.buttons.query_duration\" },\r\n                    className: \"bg-lime-700 hover:bg-lime-800\",\r\n                    onClick: this.handleDurationChange,\r\n                },\r\n                {\r\n                    label: { id: \"views.setting.cards.select_scale\" },\r\n                    button: { id: \"views.setting.buttons.select_scale\" },\r\n                    className: \"bg-sky-700 hover:bg-sky-800\",\r\n                    content: {\r\n                        id: \"views.setting.contents.select_scale\",\r\n                        format: { scale: props.scale.scale },\r\n                    },\r\n                    onClick: this.handleSelectScale,\r\n                },\r\n                {\r\n                    label: { id: \"views.setting.cards.purge_cache\" },\r\n                    content: { id: \"views.setting.contents.purge_cache\" },\r\n                    button: { id: \"views.setting.buttons.purge_cache\" },\r\n                    className: \"bg-pink-700 hover:bg-pink-800\",\r\n                    onClick: this.handlePurgeCache,\r\n                },\r\n            ],\r\n            select: {\r\n                open: false,\r\n                title: { id: \"views.setting.selects.choose_scale.title\" },\r\n                values: GLOBAL_CONFIG.app_settings.scales.map((item) => [\r\n                    item.property().name,\r\n                    item.property().value,\r\n                ]),\r\n            },\r\n            input: {\r\n                open: false,\r\n                title: { id: \"\" },\r\n                inputType: \"number\",\r\n                submitText: { id: \"\" },\r\n                onSubmit: this.handleInputSubmit,\r\n            },\r\n        };\r\n    }\r\n\r\n    // Handler for submitting input dialog\r\n    handleInputSubmit = (value: string): void => {\r\n        const { t } = this.props;\r\n        const { tag } = this.state.input;\r\n        const { updateRetention, updateDuration } = this.props;\r\n        const roundedValue = Math.round(Number(value));\r\n\r\n        // Update Redux store\r\n        switch (tag) {\r\n            case \"retention\":\r\n                updateRetention && updateRetention(roundedValue);\r\n                toast.success(\r\n                    t(\"views.setting.toasts.retention_set\", {\r\n                        retention: roundedValue.toString(),\r\n                    })\r\n                );\r\n                break;\r\n            case \"duration\":\r\n                updateDuration && updateDuration(roundedValue);\r\n                toast.success(\r\n                    t(\"views.setting.toasts.duration_set\", {\r\n                        duration: roundedValue.toString(),\r\n                    })\r\n                );\r\n                break;\r\n            default:\r\n                return;\r\n        }\r\n\r\n        // Update state to close input dialog\r\n        this.setState((state) => ({\r\n            input: { ...state.input, open: false },\r\n        }));\r\n        // Reload page\r\n        setTimeout(() => window.location.reload(), 1000);\r\n    };\r\n\r\n    // Handler for changing waveform retention time\r\n    handleRetentionChange = (): void => {\r\n        // Update state to open input dialog\r\n        this.setState((state) => ({\r\n            input: {\r\n                ...state.input,\r\n                open: true,\r\n                tag: \"retention\",\r\n                title: {\r\n                    id: \"views.setting.inputs.waveform_retention.title\",\r\n                },\r\n                content: {\r\n                    id: \"views.setting.inputs.waveform_retention.content\",\r\n                },\r\n                placeholder: {\r\n                    id: \"views.setting.inputs.waveform_retention.placeholder\",\r\n                },\r\n                submitText: {\r\n                    id: \"views.setting.inputs.waveform_retention.submit\",\r\n                },\r\n                defaultValue: this.props.retention.retention.toString(),\r\n            },\r\n        }));\r\n    };\r\n\r\n    // Handler for changing query duration\r\n    handleDurationChange = (): void => {\r\n        // Update state to open input dialog\r\n        this.setState((state) => ({\r\n            input: {\r\n                ...state.input,\r\n                open: true,\r\n                tag: \"duration\",\r\n                title: {\r\n                    id: \"views.setting.inputs.query_duration.title\",\r\n                },\r\n                content: {\r\n                    id: \"views.setting.inputs.query_duration.content\",\r\n                },\r\n                placeholder: {\r\n                    id: \"views.setting.inputs.query_duration.placeholder\",\r\n                },\r\n                submitText: {\r\n                    id: \"views.setting.inputs.query_duration.submit\",\r\n                },\r\n                defaultValue: this.props.duration.duration.toString(),\r\n            },\r\n        }));\r\n    };\r\n\r\n    // Handler for selecting scale\r\n    handleSelectScale = (): void => {\r\n        this.setState((state) => ({\r\n            select: {\r\n                ...state.select,\r\n                open: true,\r\n            },\r\n        }));\r\n    };\r\n\r\n    // Hanlder for selecting scale standard\r\n    handleScaleChange = (value: string): void => {\r\n        // Match value with scale property\r\n        const { scales } = GLOBAL_CONFIG.app_settings;\r\n        const scaleStandard = scales\r\n            .find((item) => item.property().value === value)\r\n            ?.property();\r\n        this.setState({\r\n            select: { ...this.state.select, open: false },\r\n        });\r\n        // Apply scale option to Redux store\r\n        const { t, updateScale } = this.props;\r\n        updateScale &&\r\n            updateScale(scaleStandard?.value || fallbackScale.property().value);\r\n        toast.success(\r\n            t(\"views.setting.toasts.scale_changed\", { scale: value })\r\n        );\r\n        setTimeout(() => window.location.reload(), 1000);\r\n    };\r\n\r\n    // Handler for purging cache\r\n    handlePurgeCache = (): void => {\r\n        const { t } = this.props;\r\n        localStorage.clear();\r\n        toast.success(t(\"views.setting.toasts.cache_purged\"));\r\n        setTimeout(() => window.location.reload(), 1000);\r\n    };\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n        const { select, cards, input } = this.state;\r\n\r\n        return (\r\n            <View>\r\n                <Header />\r\n                <Sidebar />\r\n\r\n                <Content>\r\n                    <Navbar />\r\n\r\n                    <Container layout=\"grid\">\r\n                        {cards.map(\r\n                            (\r\n                                { label, content, onClick, button, className },\r\n                                index\r\n                            ) => (\r\n                                <Card\r\n                                    key={index}\r\n                                    className=\"min-h-[40vh]\"\r\n                                    label={label}\r\n                                >\r\n                                    {t(content.id, content.format)\r\n                                        .split(\"\\n\")\r\n                                        .map((item: string, index: number) => (\r\n                                            <Text key={index} className=\"mb-3\">\r\n                                                {item}\r\n                                            </Text>\r\n                                        ))}\r\n                                    <Button\r\n                                        className={className}\r\n                                        onClick={onClick}\r\n                                        label={button}\r\n                                    />\r\n                                </Card>\r\n                            )\r\n                        )}\r\n                    </Container>\r\n                </Content>\r\n\r\n                <Scroller />\r\n                <Footer />\r\n\r\n                <SelectDialog {...select} onSelect={this.handleScaleChange} />\r\n                <FormDialog {...input} />\r\n                <Toaster position=\"top-center\" />\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n    updateScale,\r\n    updateRetention,\r\n    updateDuration,\r\n})(withTranslation()(Setting));\r\n"],"names":["Button","_Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","state","isBusy","_createClass","key","value","_this$props","this","t","className","label","onClick","_jsx","concat","children","id","format","Component","withTranslation","Card","apply","arguments","sublabel","childrenArr","Array","isArray","_jsxs","map","item","index","SelectDialog","title","open","values","onClose","onSelect","Dialog","DialogTitle","ListItem","disableGutters","ListItemButton","ListItemText","primary","secondary","Text","getDialogContentTextUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","DialogContentTextRoot","styled","Typography","shouldForwardProp","prop","rootShouldForwardProp","name","overridesResolver","styles","root","React","inProps","ref","useThemeProps","ownerState","_objectWithoutPropertiesLoose","classes","composedClasses","composeClasses","_extends","useUtilityClasses","component","variant","color","clsx","FormDialog","input","createRef","_placeholder$id","content","cancelText","submitText","placeholder","defaultValue","inputType","onSubmit","DialogContent","DialogContentText","TextField","autoFocus","fullWidth","inputRef","type","DialogActions","_input$current$value","_input$current","current","Setting","handleInputSubmit","tag","updateRetention","updateDuration","roundedValue","Math","round","Number","toast","success","retention","toString","duration","setState","_objectSpread","setTimeout","window","location","reload","handleRetentionChange","handleDurationChange","handleSelectScale","select","handleScaleChange","_scales$find","scaleStandard","GLOBAL_CONFIG","app_settings","scales","find","property","_this$props2","updateScale","fallbackScale","scale","handlePurgeCache","localStorage","clear","cards","button","_this$state","View","Header","Sidebar","Content","Navbar","Container","layout","_ref","split","Scroller","Footer","Toaster","position","connect","mapStateToProps"],"sourceRoot":""}