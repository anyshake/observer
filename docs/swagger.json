{
    "swagger": "2.0",
    "info": {
        "description": "This is Observer RESTful API documentation, please set `server_settings.debug` to `false` in `config.json` when deploying to production environment in case of any security issues.",
        "title": "Observer RESTful API documentation",
        "contact": {}
    },
    "basePath": "/api/v1",
    "paths": {
        "/history": {
            "post": {
                "description": "Get waveform count data in specified time range, channel and format, the maximum duration of the waveform data to be exported is 24 hours for JSON and 1 hour for SAC",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "application/octet-stream"
                ],
                "summary": "AnyShake Observer waveform history",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Start timestamp of the waveform data to be queried, in milliseconds",
                        "name": "start",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "End timestamp of the waveform data to be queried, in milliseconds",
                        "name": "end",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Format of the waveform data to be queried, `json` or `sac`",
                        "name": "format",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Channel of the waveform, `EHZ`, `EHE` or `EHN`, reuqired when format is `sac`",
                        "name": "channel",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully exported the waveform data",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.HttpResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/publisher.Geophone"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Failed to export waveform data due to invalid format or channel",
                        "schema": {
                            "$ref": "#/definitions/response.HttpResponse"
                        }
                    },
                    "410": {
                        "description": "Failed to export waveform data due to no data available",
                        "schema": {
                            "$ref": "#/definitions/response.HttpResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to export waveform data due to failed to read data source",
                        "schema": {
                            "$ref": "#/definitions/response.HttpResponse"
                        }
                    }
                }
            }
        },
        "/mseed": {
            "post": {
                "description": "List MiniSEED data if action is `show`, or export MiniSEED data in .mseed format if action is `export`",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "application/octet-stream"
                ],
                "summary": "AnyShake Observer MiniSEED data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Action to be performed, either `show` or `export`",
                        "name": "action",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Name of MiniSEED file to be exported, end with `.mseed`",
                        "name": "name",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully get list of MiniSEED files",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.HttpResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/mseed.MiniSEEDFile"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Failed to list or export MiniSEED data due to invalid request body",
                        "schema": {
                            "$ref": "#/definitions/response.HttpResponse"
                        }
                    },
                    "410": {
                        "description": "Failed to export MiniSEED data due to invalid file name or permission denied",
                        "schema": {
                            "$ref": "#/definitions/response.HttpResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to list or export MiniSEED data due to internal server error",
                        "schema": {
                            "$ref": "#/definitions/response.HttpResponse"
                        }
                    }
                }
            }
        },
        "/station": {
            "get": {
                "description": "Get Observer station status including system information, memory usage, disk usage, CPU usage, ADC information, geophone information, and location information",
                "produces": [
                    "application/json"
                ],
                "summary": "AnyShake Observer station status",
                "responses": {
                    "200": {
                        "description": "Successfully read station status",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.HttpResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/station.System"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/trace": {
            "post": {
                "description": "Get list of earthquake events data source and earthquake events from specified data source",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "AnyShake Observer event trace",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Use `show` to get available sources first, then choose one and request again to get events",
                        "name": "source",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully read the list of earthquake events",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.HttpResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/trace.Event"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Failed to read earthquake event list due to invalid data source",
                        "schema": {
                            "$ref": "#/definitions/response.HttpResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to read earthquake event list due to failed to read data source",
                        "schema": {
                            "$ref": "#/definitions/response.HttpResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "mseed.MiniSEEDFile": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "size": {
                    "type": "string"
                },
                "time": {
                    "type": "integer"
                },
                "ttl": {
                    "type": "integer"
                }
            }
        },
        "publisher.Geophone": {
            "type": "object",
            "properties": {
                "ehe": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "ehn": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "ehz": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "ts": {
                    "type": "integer"
                }
            }
        },
        "publisher.System": {
            "type": "object",
            "properties": {
                "errors": {
                    "type": "integer"
                },
                "failures": {
                    "type": "integer"
                },
                "messages": {
                    "type": "integer"
                },
                "offset": {
                    "type": "number"
                },
                "pushed": {
                    "type": "integer"
                },
                "queued": {
                    "type": "integer"
                }
            }
        },
        "response.HttpResponse": {
            "type": "object",
            "properties": {
                "data": {},
                "error": {
                    "type": "boolean"
                },
                "message": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "time": {
                    "type": "string"
                }
            }
        },
        "station.System": {
            "type": "object",
            "properties": {
                "adc": {
                    "$ref": "#/definitions/station.adcModel"
                },
                "cpu": {
                    "$ref": "#/definitions/station.cpuModel"
                },
                "disk": {
                    "$ref": "#/definitions/station.diskModel"
                },
                "geophone": {
                    "$ref": "#/definitions/station.geophoneModel"
                },
                "memory": {
                    "$ref": "#/definitions/station.memoryModel"
                },
                "os": {
                    "$ref": "#/definitions/station.osModel"
                },
                "position": {
                    "$ref": "#/definitions/station.positionModel"
                },
                "station": {
                    "$ref": "#/definitions/station.stationModel"
                },
                "status": {
                    "$ref": "#/definitions/publisher.System"
                },
                "timestamp": {
                    "type": "integer"
                },
                "uptime": {
                    "type": "integer"
                }
            }
        },
        "station.adcModel": {
            "type": "object",
            "properties": {
                "fullscale": {
                    "type": "number"
                },
                "resolution": {
                    "type": "integer"
                }
            }
        },
        "station.cpuModel": {
            "type": "object",
            "properties": {
                "model": {
                    "type": "string"
                },
                "percent": {
                    "type": "number"
                }
            }
        },
        "station.diskModel": {
            "type": "object",
            "properties": {
                "free": {
                    "type": "integer"
                },
                "percent": {
                    "type": "number"
                },
                "total": {
                    "type": "integer"
                },
                "used": {
                    "type": "integer"
                }
            }
        },
        "station.geophoneModel": {
            "type": "object",
            "properties": {
                "ehe": {
                    "type": "number"
                },
                "ehn": {
                    "type": "number"
                },
                "ehz": {
                    "type": "number"
                }
            }
        },
        "station.memoryModel": {
            "type": "object",
            "properties": {
                "free": {
                    "type": "integer"
                },
                "percent": {
                    "type": "number"
                },
                "total": {
                    "type": "integer"
                },
                "used": {
                    "type": "integer"
                }
            }
        },
        "station.osModel": {
            "type": "object",
            "properties": {
                "arch": {
                    "type": "string"
                },
                "distro": {
                    "type": "string"
                },
                "hostname": {
                    "type": "string"
                },
                "os": {
                    "type": "string"
                }
            }
        },
        "station.positionModel": {
            "type": "object",
            "properties": {
                "elevation": {
                    "type": "number"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                }
            }
        },
        "station.stationModel": {
            "type": "object",
            "properties": {
                "location": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "network": {
                    "type": "string"
                },
                "station": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "trace.Event": {
            "type": "object",
            "properties": {
                "depth": {
                    "type": "number"
                },
                "distance": {
                    "type": "number"
                },
                "estimation": {
                    "$ref": "#/definitions/trace.estimation"
                },
                "event": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "magnitude": {
                    "type": "number"
                },
                "region": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "integer"
                },
                "verfied": {
                    "type": "boolean"
                }
            }
        },
        "trace.estimation": {
            "type": "object",
            "properties": {
                "p": {
                    "type": "number"
                },
                "s": {
                    "type": "number"
                }
            }
        }
    }
}